""" 
Interactive Test for '0-add_integer module'
Function: add_integer
Args:
	a (int or float)
	b (int or float)
Return: int(a + b)


Check for module doc string
>>> mod = __import__('0-add_integer').__doc__
>>> len(mod) > 1
True

Import function to test check doc string
>>> add = __import__('0-add_integer').add_integer
>>> len(add.__doc__) > 1
True

Check when no arguments are passed:
>>> add()
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: add_integer() missing 1 required positional argument: 'a'

Check for normal situations (ints and whole number floats)
>>> add(1, 2)
3
>>> add(1, 2.0)
3
>>> add(1.0, 2)
3

Check for when one argument is present, that is 'a'
>>> add(1)
99

Check for err situations: unwanted data types
>>> try:
...	add('hello', 2)
... except Exception as e:
...	print(e)
...
a must be an integer
>>> try:
...	add(1, 'hello')
... except Exception as e:
...	print(e)
...
b must be an integer
>>> try:
...	add(1.1, 2)
... except Exception as e:
...	print(e)
...
a must be an integer
>>> try:
...	add(1, 2.2)
... except Exception as e:
...	print(e)
...
b must be an integer
>>>
"""
