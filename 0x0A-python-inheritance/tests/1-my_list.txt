"""
Interactive test for print_sorted function in MyList subclass

Check module's docstring
>>> mod = __import__('1-my_list').__doc__
>>> len(mod) > 1
True

Import class
>>> MyList = __import__('1-my_list').MyList

Check class docstring
>>> cls_doc = MyList.__doc__
>>> len(cls_doc) > 1
True

Check function docstring
>>> func_doc = MyList.print_sorted.__doc__
>>> len(func_doc) > 1
True

Checks for normal scenario
1. Check if MyList is list subtype
>>> issubclass(MyList, list)
True

2. Check if for sorted output while original object remains intact
>>> a = MyList()
>>> a.append(1)
>>> a.append(10) 
>>> a.append(20)
>>> a.append(8)
>>> print(a)
[1, 10, 20, 8]
>>> a.print_sorted()
[1, 8, 10, 20]
>>> print(a)
[1, 10, 20, 8]

3. Sort negative numbers
>>> a = MyList()
>>> a.append(-1)
>>> a.append(-10) 
>>> a.append(-20)
>>> a.append(-8)
>>> print(a)
[-1, -10, -20, -8]
>>> a.print_sorted()
[-20, -10, -8, -1]
>>> print(a)
[-1, -10, -20, -8]

4. Sort a mixture of positive and negative numbers
>>> a = MyList()
>>> a.append(1)
>>> a.append(-10) 
>>> a.append(-7)
>>> a.append(8)
>>> print(a)
[1, -10, -7, 8]
>>> a.print_sorted()
[-10, -7, 1, 8]
>>> print(a)
[1, -10, -7, 8]

5. Check inheritance of from list
>>> a = MyList((1, 3, 5, 6))
>>> print(a)
[1, 3, 5, 6]
>>> type(a)
<class '1-my_list.MyList'>
>>> isinstance(a, list)
True
>>>
"""
